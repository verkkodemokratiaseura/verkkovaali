# <OpenID voting platform> Copyright (c) 2012  Suomen Verkkodemokratiaseura ry  <toimisto@verkkodemokratia.fi> This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the file LICENSE.TXT in the root directory of this program and GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
[app:webidentity]
use = egg:webIdentity
reload_templates = false
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = false
default_locale_name = fi

sqlalchemy.url = mysql://webidentity:XXXXXXXX@xxx.xxx.x.xx/webidentity?charset=utf8
sqlalchemy.pool_recycle = 3600

session.key = webidentity
session.cookie_expires = true
session.type = ext:memcached
session.url = xxx.xxx.x.xx:xxxxx
session.auto = true
session.validata_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
session.secure = true
session.timeout = 3600
session.lock_dir = %(here)s/sessions/lock

# Application specific configuration
webidentity_user_attributes =
    http://axschema.org/namePerson Fullname
    http://axschema.org/namePerson/first First n√§me
    http://axschema.org/namePerson/last Last name
    http://axschema.org/company/name Company
    http://axschema.org/contact/city City
    http://axschema.org/contact/email Email
webidentity_from_address = xxxx@xxxx.xx
webidentity_date_format = %d.%m.%Y %H:%M
webidentity_smtp_port = 25
webidentity_smtp_host = localhost
webidentity_smtp_debug = false

[filter:weberror]
use = egg:WebError#error_catcher
debug = false
;error_log =
;show_exceptions_in_wsgi_errors = true
smtp_server = localhost
error_email = xxxx@xxxx.xx
;smtp_username = janitor
;smtp_password = "janitor's password"
from_address = xxxx@xxxx.xx
error_subject_prefix = "WebIdentity Error"
;smtp_use_tls =
;error_message =

[filter:translogger]
use = egg:Paste#translogger
setup_console_handler = False

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[filter:browserid]
use = egg:repoze.browserid#browserid
secret_key = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

[pipeline:main]
pipeline =
    weberror
    tm
    browserid
    egg:repoze.vhm#vhm_xheaders
    translogger
    webidentity

[server:main]
use = egg:BufferedWSGI#http
host = %(http_host)s
port = %(http_port)s
use_threadpool = true
threadpool_workers = 4
threadpool_spawn_if_under = 4

# Begin logging configuration

[loggers]
keys = root, webidentity, sqlalchemy, wsgi

[handlers]
keys = console, accesslog, eventlog

[formatters]
keys = generic, accesslog

[formatter_accesslog]
format = %(message)s

[logger_root]
level = INFO
handlers = console, accesslog

[logger_webidentity]
level = INFO
handlers = eventlog
qualname = webidentity

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_accesslog]
class = FileHandler
args = ('var/log/webidentity-access.log','a')
level = INFO
formatter = accesslog

[handler_eventlog]
class = FileHandler
args = ('var/log/webidentity-event.log','a')
level = INFO
formatter = generic

[logger_wsgi]
level = INFO
handlers = accesslog
qualname = wsgi
propagate = 0

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
