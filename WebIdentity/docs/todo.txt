# <OpenID voting platform> Copyright (c) 2012  Suomen Verkkodemokratiaseura ry  <toimisto@verkkodemokratia.fi> This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the file LICENSE.TXT in the root directory of this program and GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.
TODO
====

  * Configure the SQLAlchemy models to use cascade operations accordingly.

  * Add support for the policy url in sreg, check if there is something
    similar to AX.

  * Modify the models to use InnoDB when using MySQL and update the OpenID
    tables' primary key definitions to set a specific key size on BLOB fields.
    (We might need to use a custom DDL() statement to make this work, see
    http://www.sqlalchemy.org/docs/core/schema.html#sqlalchemy.schema.DDL)

  * Make it explicit whether the user stays logged in the provider after an
    OpenID authentication finished. (Currently the user stays logged in).

  * Allow the OpenID authentication process to continue even if the user goes
    through the password reset procedure.

  * Allow login either using the local id (e.g. john.doe) or the full
    identifier (e.g. http://john.doe.provider.com/).

  * Should we incorporate a shared secret between the voting app / provider
    and use that to hash the data? This is most likely redundant as OpenID
    already does that.
